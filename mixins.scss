$mixins_breakpoint_default_desktop: 992;


/**
setzte werte f端r alle headlines
erleichtert schreibarbeit und verbessert lesbarkeit
**/ 

@mixin headlines()
{
    h1,h2,h3,h4,h5,h6 
    {
        @content;
    }
}


/**
berechnet die font size von pixel Angabe in rem

WICHTIG:

bei Aufruf keine Angabe in px sonst kann rem nicht berechnet werden
**/

@mixin font-size($size, $important: 0)
{
    $value: $size / 16;

    @if $important == 0
    {
        font-size: #{$value}rem;
    }
    @else
    {
        font-size: #{$value}rem !important;
    }

}


/**
klassischer breakpoint alles unter ... breite
**/

@mixin mobile($bp: #{$mixins_breakpoint_default_desktop - 1}px)
{
    @media screen and (max-width: #{$bp})
    {
        @content;
    }
}


/**
klassischer breakpoint alles 端ber ... breite
**/

@mixin desktop($bp: #{$mixins_breakpoint_default_desktop}px)
{
    @media screen and (min-width: #{$bp})
    {
        @content;
    }
}


/**
html struktur sollte so aussehen:

<div class="nv-container"><iframe></iframe></div>

n端tzlich f端r youtube und andere videos die 16:9 dargestellt werden sollen
**/

@mixin video-ratio($container: '.nv-container')
{
    #{$container}
    {
        padding-top: calc(100% * (9 / 16));
        position: relative;

        iframe 
        {
            position: absolute;
            width: 100%;
            height: 100%;
            left: 0;
            top: 0;
        }
    }
}


/**
berechnet die breite eines items anhand der anzahl seiner geschwister

bsp: 

<div>
    <span>Test</span>
    <span>Test</span>
</div>

-> span width 50%
**/

@mixin widthBasedOnQuantity($element, $maxItems: 5, $gap: 0)
{
    #{$element}:first-child:nth-last-child(1) 
    {
        width: 100%;
        @content;
    }

    @for $i from 2 through $maxItems 
    {
        #{$element}:first-child:nth-last-child(#{$i}),
        #{$element}:first-child:nth-last-child(#{$i}) ~ #{$element} 
        {
            width: calc(100% / #{$i} - #{$gap}px);
            @content;
        }
    }
}